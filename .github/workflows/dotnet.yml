name: Dotnet build & publish

on:
  push:
    branches: [ develop, main, xamarin ]
  pull_request:
    branches: [ develop, xamarin ]
jobs:
  build:

    env:
      SOLUTION: 'ExoPlayer.sln'

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1.3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Install dependencies
      run: dotnet restore $SOLUTION
    - name: Build
      run: msbuild $SOLUTION -p:Configuration=Release -p:RestorePackages=false -verbosity:minimal
      
  publish:
    runs-on: windows-latest
    needs: build
    if: github.ref == 'refs/heads/main' # Deploy for main branch
    steps:
    - name: Publish the package to Nuget.org
      run: dotnet nuget push artifacts\*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{secrets.PUBLISH_TO_NUGET_ORG}} --skip-duplicate

  publish-xamarin:
    env:
      SOLUTION: 'ExoPlayer.sln'
  
    runs-on: windows-latest
    needs: build
    if: github.ref == 'refs/heads/xamarin' # Deploy for xamarin branch
    steps:
      - name: Create the package
        run: dotnet pack $SOLUTION --configuration Release --no-build --no-restore --version-suffix -xamarin --output bin\Xamarin
        
# - name: Publish the package to Nuget.org
#  run: dotnet nuget push bin\Xamarin\**\*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{secrets.PUBLISH_TO_NUGET_ORG}} --skip-duplicate
